stages:
  - build
  - check
  - publish

# Disable the Gradle daemon for Continuous Integration servers as correctness
# is usually a priority over speed in CI environments. Using a fresh
# runtime for each build is more reliable since the runtime is completely
# isolated from any previous builds.
variables:
  GRADLE_OPTS: -Dorg.gradle.daemon=false
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle
  ANDROID_SDK_ROOT: $CI_PROJECT_DIR/.android
  ANDROID_CLI_TOOLS: 7583922
  ANDROID_PLATFORM: 30
  ANDROID_BUILD_TOOLS: 31.0.0
  ANDROID_NDK: 23.1.7779620

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches
    - .android

.rules: &rules
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+/'

check_mr:
  stage: check
  only:
    - merge_request
  script:
    - gradle check

build-linux:
  stage: build
  tags: [ "docker" ]
  image: ubuntu:latest
  rules: *rules
  before_script:
    - apt-get update && apt-get install -y chromium-browser libncurses5 libcurl4-openssl-dev
    - wget https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_CLI_TOOLS}_latest.zip
    - unzip commandlinetools-linux-${ANDROID_CLI_TOOLS}_latest.zip
    - cmdline-tools/bin/sdkmanager
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | cmdline-tools/bin/sdkmanager --licenses
    - set -o pipefail
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_PLATFORM}" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "ndk;${ANDROID_NDK}" >/dev/null
  script:
    - ./gradlew build

#build-windows:
#  stage: build
#  tags: [ "windows" ]
#  rules: *rules
#  script:
#    - ./gradlew.bat build

#build-mac:
#  stage: build
#  tags: [ "shared-macos-amd64" ]
#  image: macos-11-xcode-12
#  rules: *rules
#  script:
#    - ./gradlew.bat build

check-linux:
  stage: check
  tags: [ "docker" ]
  image: ubuntu:latest
  rules: *rules
  script:
    - ./gradlew check

publish:
  stage: publish
  tags: [ "docker" ]
  image: ubuntu:latest
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+/'
  script:
    - ./gradlew publish

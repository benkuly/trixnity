workflow:
  auto_cancel:
    on_new_commit: interruptible
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "schedule"

stages:
  - changelog
  - prepare-build
  - build
  - test
  - security
  - publish-snapshot
  - publish
  - website

variables:
  GRADLE_OPTS: -Dorg.gradle.daemon=false
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle
  KONAN_DATA_DIR: $CI_PROJECT_DIR/.konan
  KOTLIN_DATA_DIR: $CI_PROJECT_DIR/.kotlin
  BUILD_LINUX_IMAGE_NAME: registry.gitlab.com/trixnity/kmp-dockerfiles/kmp-dockerfiles-base:latest
  TRIVY_LINUX_IMAGE_NAME: registry.gitlab.com/trixnity/kmp-dockerfiles/kmp-dockerfiles-trivy:latest

.cache: &cache
  - key:
      files:
        - gradle/wrapper/gradle-wrapper.properties
        - gradle/libs.versions.toml
    paths:
      - $GRADLE_USER_HOME/wrapper
      - $GRADLE_USER_HOME/nodejs
      - $GRADLE_USER_HOME/yarn
      - $GRADLE_USER_HOME/native
      - $KONAN_DATA_DIR
      - $KOTLIN_DATA_DIR

.docker-variables: &docker-variables
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

.artifact-reports: &artifact-reports
  name: reports
  when: always
  paths: [ "**/build/reports" ]
  reports:
    junit: "**/build/test-results/**/TEST-*.xml"
    coverage_report:
      coverage_format: jacoco
      path: build/reports/kover/report.xml

.if-merge-request: &if-merge-request
  - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != $CI_DEFAULT_BRANCH
    when: never
  - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME

.if-release: &if-release
  - if: '$CI_COMMIT_TAG =~ /^v\d+.\d+.\d+.*/'

.if-main: &if-main
  - if: '$CI_COMMIT_TAG =~ /^v\d+.\d+.\d+.*/'
    when: never
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: never
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build:mac:
  stage: build
  interruptible: true
  tags: [ "trixnity-mac-internal" ]
  cache:
    - *cache
  rules:
    - *if-merge-request
  script:
    - ./gradlew
      compileKotlin{IosArm64,IosSimulatorArm64,IosX64,MacosArm64,MacosX64}
      compileTestKotlin{IosSimulatorArm64,IosX64,MacosArm64,MacosX64}
      --stacktrace

build:linux:
  stage: build
  interruptible: true
  tags: [ "saas-linux-large-amd64" ]
  image: $BUILD_LINUX_IMAGE_NAME
  cache:
    - *cache
  rules:
    - *if-merge-request
  script:
    - ./gradlew
      compileKotlin{Jvm,Js,LinuxX64,MingwX64}
      compileReleaseKotlinAndroid
      compileTestKotlin{Jvm,Js,LinuxX64,MingwX64}
      compileReleaseUnitTestKotlinAndroid
      --stacktrace

test:mac:
  stage: test
  interruptible: true
  timeout: 1h
  needs: [ "build:mac" ]
  tags: [ "trixnity-mac-internal" ]
  cache:
    - *cache
  artifacts: *artifact-reports
  rules:
    - *if-merge-request
  script:
    - ./gradlew
      {iosSimulatorArm64,iosX64,macosArm64,macosX64}Test
      --stacktrace

test:linux:
  stage: test
  interruptible: true
  timeout: 1h
  needs: [ "build:linux" ]
  tags: [ "saas-linux-large-amd64" ]
  image: $BUILD_LINUX_IMAGE_NAME
  cache:
    - *cache
  artifacts: *artifact-reports
  rules:
    - *if-merge-request
  script:
    - ./gradlew
      {jvm,js,linuxX64,mingwX64,testReleaseUnit}Test -x :trixnity-client:integration-tests:jvmTest
      testCoverage
      --stacktrace
  coverage: '/Total test coverage.+ ([0-9]{1,3}%)/'

test:integration-test:
  stage: test
  interruptible: true
  timeout: 30m
  needs: [ "build:linux" ]
  tags: [ "saas-linux-medium-amd64" ]
  image: $BUILD_LINUX_IMAGE_NAME
  services:
    - name: docker:dind
      command: [ "--tls=false" ]
  cache:
    - *cache
  variables: *docker-variables
  artifacts: *artifact-reports
  rules:
    - *if-merge-request
  script:
    - ./gradlew
      :trixnity-client:integration-tests:jvmTest
      --stacktrace

security:dependencies:
  stage: security
  interruptible: true
  timeout: 30m
  needs: [ ]
  tags: [ "saas-linux-small-amd64" ]
  image: $TRIVY_LINUX_IMAGE_NAME
  variables:
    TRIVY_CACHE_DIR: ".trivycache/"
    WITH_LOCK: true
  cache:
    - *cache
    - key:
        files:
          - gradle/wrapper/gradle-wrapper.properties
          - gradle/libs.versions.toml
      paths:
        - .trivycache/
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      allow_failure: true
    - if: '$CI_COMMIT_TAG =~ /^v\d+.\d+.\d+.*/'
      allow_failure: false
    - if: $CI_PIPELINE_SOURCE == "schedule"
      allow_failure: false
  artifacts:
    when: always
    reports:
      dependency_scanning: report.json
  script:
    - ./gradlew dependenciesForAll --write-locks --no-parallel > dependencies.txt
    - trivy repo ./ --exit-code 0
    - trivy repo ./ --exit-code 0 --format template --template "@/usr/local/share/trivy/templates/gitlab.tpl" --output report.json
    - trivy repo ./ --exit-code 1 --severity CRITICAL

changelog:
  stage: changelog
  interruptible: true
  timeout: 5m
  tags: [ "saas-linux-small-amd64" ]
  rules:
    - *if-merge-request
  script:
    - git fetch origin main
    - |
      if git diff --name-only HEAD origin/main | grep "CHANGELOG.md"; then
        echo "CHANGELOG.md has changed"
      else
        echo "CHANGELOG.md has not changed"
        exit 1
      fi

publish-snapshot:mac:
  stage: publish-snapshot
  tags: [ "trixnity-mac-internal" ]
  cache:
    - *cache
  rules:
    - *if-main
  script:
    - ./gradlew
      publish{IosArm64,IosSimulatorArm64,IosX64,MacosArm64,MacosX64}PublicationToSnapshotRepository
      --stacktrace

publish-snapshot:linux:
  stage: publish-snapshot
  tags: [ "saas-linux-medium-amd64" ]
  image: $BUILD_LINUX_IMAGE_NAME
  cache:
    - *cache
  rules:
    - *if-main
  artifacts:
    paths:
      - website/static/api/
  script:
    - ./gradlew
      publish{KotlinMultiplatform,Jvm,Js,LinuxX64,MingwX64,AndroidRelease,TrixnityPlatform}PublicationToSnapshotRepository
      dokkaHtmlToWebsite
      --stacktrace

publish:create-nexus-staging-repo:
  stage: publish
  tags: [ "saas-linux-small-amd64" ]
  image: ubuntu:latest
  rules:
    - *if-release
  artifacts:
    paths: [ "./OSSRH_REPOSITORY_ID" ]
  script:
    - apt-get update && apt-get install -y curl jq
    - >
      jsonOutput=$(curl -s
      --request POST -u "$OSSRH_USERNAME:$OSSRH_PASSWORD"
      --url https://oss.sonatype.org/service/local/staging/profiles/65b35e28422b2/start
      --header 'Accept: application/json'
      --header 'Content-Type: application/json'
      --data '{ "data": {"description" : "'"$CI_COMMIT_TAG"'"} }'
      )
    - OSSRH_REPOSITORY_ID=$(echo "$jsonOutput" | jq -r '.data.stagedRepositoryId')
    - >
      if [ -z "$OSSRH_REPOSITORY_ID" ]; then
      echo "Error while creating the staging repository. Response: $jsonOutput";
      exit 1;
      fi
    - echo -n $OSSRH_REPOSITORY_ID > ./OSSRH_REPOSITORY_ID

publish:mac:
  stage: publish
  needs: [ "publish:create-nexus-staging-repo" ]
  tags: [ "trixnity-mac-internal" ]
  cache:
    - *cache
  rules:
    - *if-release
  script:
    - export OSSRH_REPOSITORY_ID=$(cat ./OSSRH_REPOSITORY_ID)
    - ./gradlew
      publish{IosArm64,IosSimulatorArm64,IosX64,MacosArm64,MacosX64}PublicationToReleaseRepository
      --stacktrace

publish:linux:
  stage: publish
  needs: [ "publish:create-nexus-staging-repo" ]
  tags: [ "saas-linux-medium-amd64" ]
  image: $BUILD_LINUX_IMAGE_NAME
  cache:
    - *cache
  rules:
    - *if-release
  script:
    - export OSSRH_REPOSITORY_ID=$(cat ./OSSRH_REPOSITORY_ID)
    - ./gradlew
      publish{KotlinMultiplatform,Jvm,Js,LinuxX64,MingwX64,AndroidRelease,TrixnityPlatform}PublicationToReleaseRepository
      --stacktrace

pages:
  stage: website
  image: node:lts
  rules:
    - *if-main
  script:
    - cd website
    - yarn install --force
    - yarn build
    - mv ./build ../public
  artifacts:
    paths:
      - public
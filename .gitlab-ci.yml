stages:
  - prepare-build
  - build
  - publish

variables:
  GRADLE_OPTS: -Dorg.gradle.daemon=false
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle
  KONAN_DATA_DIR: $CI_PROJECT_DIR/.konan
  BUILD_LINUX_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/trixnity-build-linux:latest

.build-cache: &build-cache
  key: global-tixnity-cache
  paths:
    - .gradle
    - .konan

.docker-variables: &docker-variables
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

.artifact-reports: &artifact-reports
  name: reports
  when: always
  paths: [ "**/build/reports" ]


build-trixnity-build-linux-image:
  stage: prepare-build
  image: docker:20
  services:
    - name: docker:20-dind
      command: [ "--tls=false" ]
  when: manual
  script:
    - docker build gitlab-ci/ -t $BUILD_LINUX_IMAGE_NAME
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $BUILD_LINUX_IMAGE_NAME

build-linux:
  stage: build
  image: $BUILD_LINUX_IMAGE_NAME
  services:
    - name: docker:20-dind
      command: [ "--tls=false" ]
  cache: *build-cache
  variables: *docker-variables
  artifacts: *artifact-reports
  only:
    - merge_requests
  script:
    - ./gradlew buildOlm
    - ./gradlew build --stacktrace

#build-windows:
#  stage: build
#  tags: [ "windows" ]
#  rules: *rules
#  script:
#    - ./gradlew.bat build

#build-mac:
#  stage: build
#  tags: [ "shared-macos-amd64" ]
#  image: macos-11-xcode-12
#  rules: *rules
#  script:
#    - ./gradlew.bat build

publish:
  stage: publish
  image: $BUILD_LINUX_IMAGE_NAME
  services:
    - name: docker:20-dind
      command: [ "--tls=false" ]
  cache: *build-cache
  variables: *docker-variables
  artifacts: *artifact-reports
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+.\d+.\d+.*/'
  script:
    - ./gradlew buildOlm
    - ./gradlew build --stacktrace
    - ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository --stacktrace

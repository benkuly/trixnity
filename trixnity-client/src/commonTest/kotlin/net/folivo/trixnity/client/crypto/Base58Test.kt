package net.folivo.trixnity.client.crypto

import io.kotest.core.spec.style.ShouldSpec
import io.kotest.matchers.shouldBe

class Base58Test : ShouldSpec({
    // Tests from https://github.com/bitcoin/bitcoin/blob/master/src/test/data/base58_encode_decode.json
    val testVectors = mapOf(
        listOf<Int>() to "",
        listOf(0x61) to "2g",
        listOf(0x62, 0x62, 0x62) to "a3gV",
        listOf(0x63, 0x63, 0x63) to "aPEr",
        listOf(
            0x73, 0x69, 0x6d, 0x70, 0x6c, 0x79, 0x20, 0x61, 0x20, 0x6c,
            0x6f, 0x6e, 0x67, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67
        ) to "2cFupjhnEsSn59qHXstmK2ffpLv2",
        listOf(
            0x00, 0xeb, 0x15, 0x23, 0x1d, 0xfc, 0xeb, 0x60, 0x92, 0x58, 0x86, 0xb6, 0x7d,
            0x06, 0x52, 0x99, 0x92, 0x59, 0x15, 0xae, 0xb1, 0x72, 0xc0, 0x66, 0x47
        ) to "1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L",
        listOf(0x51, 0x6b, 0x6f, 0xcd, 0x0f) to "ABnLTmg",
        listOf(0xbf, 0x4f, 0x89, 0x00, 0x1e, 0x67, 0x02, 0x74, 0xdd) to "3SEo3LWLoPntC",
        listOf(0x57, 0x2e, 0x47, 0x94) to "3EFU7m",
        listOf(0xec, 0xac, 0x89, 0xca, 0xd9, 0x39, 0x23, 0xc0, 0x23, 0x21) to "EJDM8drfXA6uyA",
        listOf(0x10, 0xc8, 0x51, 0x1e) to "Rt5zm",
        listOf(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) to "1111111111"
    ).mapKeys { entry -> entry.key.map { it.toByte() }.toByteArray() }

    should("encode base58") {
        testVectors.forEach {
            it.value.decodeBase58() shouldBe it.key
        }
    }

    should("decode base58") {
        testVectors.forEach {
            it.key.encodeBase58() shouldBe it.value
        }
    }
})